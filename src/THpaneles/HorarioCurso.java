/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package THpaneles;

import THlogica.curso;
import THlogica.dia;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.geom.Area;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;

/**
 *
 * @author User
 */
public class HorarioCurso extends javax.swing.JPanel {
    
    
    
    private dia DIA;
    private curso CURSO;
    private String name;
    
    private int round = 30;
    public HorarioCurso() {
        round = 30;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new custom.PanelRound();
        Nombre = new javax.swing.JLabel();
        franja = new custom.PanelRound();

        setBackground(new java.awt.Color(255, 255, 255));
        setOpaque(false);
        setLayout(null);

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setRoundBottomLeft(25);
        bg.setRoundBottomRight(25);
        bg.setRoundTopLeft(25);
        bg.setRoundTopRight(25);
        bg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bgMouseClicked(evt);
            }
        });
        bg.setLayout(null);

        Nombre.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        Nombre.setForeground(new java.awt.Color(255, 255, 255));
        Nombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Nombre.setText("Calculo D");
        bg.add(Nombre);
        Nombre.setBounds(0, 0, 120, 40);

        franja.setBackground(new java.awt.Color(255, 255, 255));
        franja.setRoundBottomLeft(25);
        franja.setRoundBottomRight(25);

        javax.swing.GroupLayout franjaLayout = new javax.swing.GroupLayout(franja);
        franja.setLayout(franjaLayout);
        franjaLayout.setHorizontalGroup(
            franjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );
        franjaLayout.setVerticalGroup(
            franjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        bg.add(franja);
        franja.setBounds(0, 40, 120, 20);

        add(bg);
        bg.setBounds(0, 0, 120, 90);
    }// </editor-fold>//GEN-END:initComponents

    private void bgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMouseClicked
        
    }//GEN-LAST:event_bgMouseClicked

    public dia getDIA() {
        return DIA;
    }

    public void setDIA(dia DIA) {
        this.DIA = DIA;
        actComponents();
    }

    public curso getCURSO() {
        return CURSO;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
        Nombre.setText(name);
        convertTextToColor(name);
    }
        
    
    
    public void setCURSO(curso CURSO) {
        this.CURSO = CURSO;
        setName(CURSO.getNombre());
        convertTextToColor(CURSO.getNombre());
        actComponents();
    }

    
    public void convertTextToColor(String text) {
        int hashCode = (text+"n").hashCode();
        this.franja.setBackground(new Color(hashCode));
        this.bg.setBackground(LightColor(new Color(hashCode),0.9));
        this.Nombre.setForeground(new Color(hashCode));
        repaint();
    }
    
    
    
    public static Color LightColor(Color color, double factor) {
        int red = (int) (color.getRed() + (255 - color.getRed()) * factor);
        int green = (int) (color.getGreen() + (255 - color.getGreen()) * factor);
        int blue = (int) (color.getBlue() + (255 - color.getBlue()) * factor);

        // Asegurarse de que los valores se encuentren dentro del rango v√°lido (0-255)
        red = Math.min(red, 255);
        green = Math.min(green, 255);
        blue = Math.min(blue, 255);

        return new Color(red, green, blue);
    }
    
    
    private void actComponents(){
        if (DIA== null) return;
        
        bg.setBounds(0,0,120, 30*DIA.Hcant());
        //System.out.println("ALTU " +  bg.getHeight());
        this.revalidate();
        this.repaint();
        bg.revalidate();
        bg.repaint();
        
        if (DIA.Hcant() == 1) {
            franja.setBounds(0, 20, 120, 10);
            Nombre.setBounds(0,0,120,20);
        } else{
            franja.setBounds(0, 30*DIA.Hcant()   -20, 120, 20);
            Nombre.setBounds(0,0,120, 30*DIA.Hcant()   -20);
        }
        
        revalidate();
        this.repaint();
    }
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Nombre;
    private custom.PanelRound bg;
    private custom.PanelRound franja;
    // End of variables declaration//GEN-END:variables
}
